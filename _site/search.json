[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Hamza ES-SAMAALI",
    "section": "",
    "text": "I am currently a Data Science Professor at EMSI - Marrakech. I love learning as much as I love teaching. This blog is where I will be sharing my thoughts about Machine Learning related topics."
  },
  {
    "objectID": "posts/Why-this-blog/index.html",
    "href": "posts/Why-this-blog/index.html",
    "title": "Why Blogging? (and How?)",
    "section": "",
    "text": "I’ve had a complex relationship with blogging. I’ve always wanted to blog but found it too much of a hassle.\nThen I stumbled upon this post and decided to start my own blog documenting my journey as a Machine Learning enthusiast.\nThis blog will principally be a way for me to digest what I’ve learned (the best way of learning is teaching), share my thoughts and the projects I do.\nI had two main choices for blogging, the first is Medium and the second is through Github Pages.\nFor no explainable reason I never liked Medium maybe because of the annoying reading limit it has when it asks you to connect (I hold grudges easily). As for Github Pages, I found Jekyll too much of a pain to deal with, too lazy to learn its intricacies.\nFortunately this year I decided to start the famous fast.ai course and Jeremy kept talking about Quarto and how it generates blog posts from Jupyter Notebooks. I also stumbled upon this blog of a fellow fast.ai student and used his posts to create my own blog.\nSo let me share with you How I did it:"
  },
  {
    "objectID": "posts/Why-this-blog/index.html#installing-quarto-in-wsl",
    "href": "posts/Why-this-blog/index.html#installing-quarto-in-wsl",
    "title": "Why Blogging? (and How?)",
    "section": "Installing Quarto in WSL",
    "text": "Installing Quarto in WSL\nto install Quarto in WSL (or Ubuntu) via nbdev use:\nmamba install -c fastchan nbdev  \nnbdev_install_quarto"
  },
  {
    "objectID": "posts/lesson2/index.html",
    "href": "posts/lesson2/index.html",
    "title": "A coriander قزبر vs معدنوس Parsley Classifier",
    "section": "",
    "text": "Coriander قزبر and parsley معدنوس are two staple ingredients of Moroccan cuisine, our moms have the superpower of easily distinguishing between them, but us mortals cannot.\nIn lesson 2 of Deep Learning for Coders 2022 part 1, Jeremy presented a simple image classification model for grizzly, black and teddy bears. I will be using a similar model to help us on this strenuous and confusing task."
  },
  {
    "objectID": "posts/lesson2/index.html#create-a-huggingface-account",
    "href": "posts/lesson2/index.html#create-a-huggingface-account",
    "title": "A coriander قزبر vs معدنوس Parsley Classifier",
    "section": "2.1 Create a HuggingFace Account",
    "text": "2.1 Create a HuggingFace Account\n\nVisit HuggingFace Website and Create an account\nNow go to HuggingFace Spaces and Create a New Space\nIn the SDK section select Gradio\n\n\nYou have now a new space.\n\nGo to your terminal in install git lfs (to be able to upload large files) using the following command:\ngit lfs install\nNow clone your space to your computer using the command:\ngit clone https://huggingface.co/spaces/<your_username>/<your_spacename>"
  },
  {
    "objectID": "posts/lesson2/index.html#creating-a-gradio-app",
    "href": "posts/lesson2/index.html#creating-a-gradio-app",
    "title": "A coriander قزبر vs معدنوس Parsley Classifier",
    "section": "2.2 Creating a Gradio app",
    "text": "2.2 Creating a Gradio app\nNow we should create a Gradio app that takes an input from the user and queries the model for its prediction and return it.\nGradio usually requires a python file named app.py but we will be doing things differently.\nIn the fastai course we used JupyterNotebooks and nbdev to create such file, to do so, create a new Jupyter Notebook (in the folder of your cloned repo) and fill the first cell with this code:\n\n#<add a pipe character here>default_exp app\n\n#|default_exp app\nNow let’s import fastai vision and gradio\n\n#<add a pipe character here>export\nfrom fastai.vision.all import *\nimport gradio as gr\n\nthe first comment in the cell should be #|default_exp app, it is is an indicator for nbdev to export the file and name it “app”. The rest is imports we will need.\nNow move the exported model.pkl model to the folder of your repo and load it.\n\n#<add a pipe character here>export\nlearn = load_learner('model.pkl')\n\nthat #|export line indicates to nbdev that the code of this cell needs to be included in the final exported app.py, if you want to do some tests for example import some images and try the model on them you can do so on cells that do not have the comment on their first line.\nOur model is now up and ready, let’s create a Gradio interface:\n\n#<add a pipe character here>export\ncategories = ('coriander', 'parsley')\ndef classify_image(img):\n    pred, idx, probs = learn.predict(img)\n    return dict(zip(categories,map(float,probs)))\n\nLet’s break this down a bit:\n- categories contains the categories that our classifier chooses from.\nGradio requires us to give him a function that he will call, this function is classify_image, it takes an image as an arguments. the learner has a method predict that takes an input and returns 3 things:\n- pred: True for positive class, False for negative class\n- idx: gives the index of the class\n- probs: gives the probability that this item is in this class for example if we have two categories probs will be a (2,1) array with probs[0] the probability of the item being in class 0, and probs[1] the probability of it being in class 1.\nThe function returns a dictionary with categories as keys and float(probs) as values, if you are not familiar with the dict(zip()) paradigm, check up this video.\nNow that we have our function set, let’s go and create the actual interface:\n\n#<add a pipe character here>export\nimage = gr.inputs.Image(shape=(192,192))\nlabel = gr.outputs.Label()\nexamples = ['coriander.jpg','parsley.jpg']\n\nintf = gr.Interface(fn=classify_image, inputs = image, outputs = label, examples = examples)\nintf.launch(inline=False)\n\nWe created an image input object and a label output object. We also added two images to our main folder of actual coriander and parsley respectively named coriander.jpg and parsley.jpg.\nThen we proceed to creating an interface that takes as parameters:\n- fn: the function classify_image\n- inputs: the input image\n- outputs: the output label\n- examples: this is optional, use it if you want to add examples to help the user.\nOur notebook is ready to be converted into a Gradio app! We will use nbdev to do so add this cell to the bottom of your notebook and run it:\n\nimport nbdev\nnbdev.export.nb_export('app.ipynb', 'app')\nprint('Export successful')\n\nWe are almost done, all we need to do now is to create a requirements.txt file and fill it with the following:\nfastai  \ntorch  \ngradio  \nEverything is good now, let’s push this to HuggingFace:\nYou can either do this from the terminal (reminder: make sure to install git lfs) using the following commands:\ngit add .\ngit commit -m \"add your custom message\"\ngit push\nOr via the HuggingFace Website, Go to your space -> Files and versions. And add your files manually from there.\nWhen everything is done, visit https://huggingface.co/spaces/<your_username>/<your_spacename> and you will have a fully operational coriander and parsley classifying app that you can share with your friends, it’s not perfect but still it’s better than wild guessing.\nHere is mine\nNote: Hugging Face Spaces that run on the default cpu-basic hardware (free tier), will go to sleep if inactive for more than a set time (currently, 72 hours). Anyone visiting your Space will restart it automatically. When it goes to sleep you can restart it by going to your spaces."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hamza's Blog",
    "section": "",
    "text": "A coriander قزبر vs معدنوس Parsley Classifier\n\n\n\n\n\n\n\nfastai\n\n\nml\n\n\nclassification\n\n\n\n\n\n\n\n\n\n\n\nFeb 8, 2023\n\n\nHamza\n\n\n\n\n\n\n  \n\n\n\n\nWhy Blogging? (and How?)\n\n\n\n\n\n\n\nblogging\n\n\nquarto\n\n\njupyter\n\n\nfastai\n\n\n\n\n\n\n\n\n\n\n\nFeb 3, 2023\n\n\nHamza Es-samaali\n\n\n\n\n\n\nNo matching items"
  }
]